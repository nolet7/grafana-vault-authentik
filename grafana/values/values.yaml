# Grafana settings
grafana:
  enabled: true
  adminPassword: "admin"  # Change this to a secure password for production

# Prometheus integration
prometheus:
  enabled: true
  prometheusSpec:
    scrapeInterval: 30s
    scrapeTimeout: 10s

# Persistent storage for Grafana dashboards
persistence:
  enabled: true
  storageClass: "nfs-client"  # Ensure your Kubernetes setup supports NFS
  accessMode: ReadWriteOnce
  size: 10Gi

# Vault integration (for secret management)
vault:
  enabled: true
  agent:
    inject:
      enabled: true
      secrets:
        - secret/authentik

  # Add client ID and client secret here, which will be injected from Vault
  authentik:
    clientId: "your-client-id-from-authentik"  # Replace this with your actual client ID from Authentik
    clientSecret: "your-client-secret-from-authentik"  # Replace this with your actual client secret from Authentik

# OIDC Authentication with Authentik (configured with the master node IP)
grafana:
  env:
    GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
    GF_AUTH_GENERIC_OAUTH_NAME: "Authentik"
    GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "${AUTHENTIK_CLIENT_ID}"
    GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "${AUTHENTIK_CLIENT_SECRET}"
    GF_AUTH_GENERIC_OAUTH_SCOPES: "openid email profile"
    GF_AUTH_GENERIC_OAUTH_AUTH_URL: "http://192.168.0.208:9000/application/o/authorize/"
    GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "http://192.168.0.208:9000/application/o/token/"
    GF_AUTH_GENERIC_OAUTH_API_URL: "http://192.168.0.208:9000/application/o/userinfo/"
    GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: "username"
    GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: "name"
    GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "groups"
    GF_SERVER_ROOT_URL: "http://192.168.0.204"  # Using the master node IP
    GF_AUTH_SIGNOUT_REDIRECT_URL: "http://192.168.0.208:9000/if/session-end"

